<button id="showSize" class="btn btn--primary btn--large ">Customize</button>

<div id="input_data" class="shoulder-custom2">
  <style>
    .custom.form__label { margin-bottom: 0.6rem; }
    .field.custom { margin-top: 0; }
    .custom .field__input { padding-top: 0.8rem; }
  </style>

  <div class="one_input_label ">
    <label class="form__label custom custom_label" for="shoulder"
      >Shoulder<br>
      <span>(in Inches)</span></label
    >
    <div class="field custom">
      <input
        class="field__input"
        form="{{ 'product-form-' | append: section.id }}"
        type="number"
        id="shoulder"
        name="properties[Shoulder(in Inches)]"
      >
    </div>
  </div>
  <div class="one_input_label">
    <label class="form__label custom custom_label" for="wrist"
      >Wrist <br>
      (in Inches)</label
    >
    <div class="field custom">
      <input
        class="field__input"
        form="{{ 'product-form-' | append: section.id }}"
        type="number"
        id="wrist"
        name="properties[Wrist (in Inches)]"
      >
    </div>
  </div>

  <div class="one_input_label">
    <label class="form__label custom custom_label" for="hips"
      >Hips <br>
      (in Inches)</label
    >
    <div class="field custom">
      <input
        class="field__input"
        form="{{ 'product-form-' | append: section.id }}"
        type="number"
        id="hips"
        name="properties[Hips (in Inches)]"
      >
    </div>
  </div>

  <div class="one_input_label">
    <label class="form__label custom custom_label" for="chest"
      >Chest <br>
      (in Inches)</label
    >
    <div class="field custom">
      <input
        class="field__input"
        form="{{ 'product-form-' | append: section.id }}"
        type="number"
        id="chest"
        name="properties[Chest (in Inches)]"
      >
    </div>
  </div>
  <div class="additional_block">
    <label class="form__label custom custom_label" for="message">Additional Note : </label>
    <div class="field custom additonal_message_design">
      <input
        class="field__input"
        form="{{ 'product-form-' | append: section.id }}"
        type="text"
        id="message"
        name="properties[Additional Note]"
      >
    </div>
  </div>
</div>

<style>
    #showSize{
     padding : 12px;
     margin : 0px;
    background-color : white;
     border-radius : 4px;
     border : 2px solid #402f2d;
     cursor : pointer;
    }
    #showSize:hover{
      background-color :  #402f2d;
      color : white;
    }


    .additonal_message_design{
   border: 2px solid black;
    height: 150%;
    width: 98% !important;
    margin-left: 4px
    }

    .additional_block{
      margin-left : 5px;
      margin-right : 5px;
    }
    }
    .disable_input {
      display: none;
    }
    .able_input {
      display: block;
    }
    .custom_input{
      border : 1px solid black;
    }
    .one_input_label{
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-item: center;
      margin: 7px;
      margin-top: 15px;
    }
    .custom_label{
      font-size : 15px;
      color : #402f2d;
      font-weight : bold;
      margin-top : 0px;
    }

    .field{
      height : 80%;
       width : 60%;
    }
    #input_data{
  border: 2px solid #402f2d;
      padding: 17px 5px;
      margin-top: 4px;
      border-radius: 5px;
    }
    .change_btn{
      background-color : #402f2d !important;
      color : white !important;
    }
</style>

<script>
   var custom_products;
  document.getElementById('showSize').addEventListener('click', function() {
      const formContainer = document.getElementById("input_data");

      if(formContainer.classList.contains('disable_input')){

       formContainer.classList.remove('disable_input');
       document.getElementById('showSize').classList.add('change_btn');
       const selector = '.shoulder-custom2';
       const selectorInput = selector + " input";
       document.querySelectorAll(selector).forEach(el => {
          console.log(selectorInput);
          document.querySelector(selectorInput).setAttribute('form', '{{ 'product-form-' | append: section.id }}');
          document.querySelectorAll('.hidden-input-fileupload').forEach(input => input.setAttribute('form', '{{ 'product-form-' | append: section.id }}'));
        }
      )
      }
      else{
        formContainer.classList.add('disable_input');
        document.getElementById('showSize').classList.remove('change_btn');
          selector = 'shoulder-custom2';
         document.querySelectorAll(selector).forEach(el => {
         document.querySelector(selectorInput).setAttribute('form', '');
         document.querySelectorAll('.hidden-input-fileupload').forEach(input => input.setAttribute('form', ''));
        }
      )
      }
  });


    document.addEventListener('DOMContentLoaded', () => {

        const checkCurrentOption = (custom_products) => {
        console.log("custom_product:",custom_products);
        const sanitizeSelectorName = name => name.replace(/[^a-zA-Z0-9_-]/g, '-').replace(/^-+|-+$/g, '').replace(/\s+/g, '-').toUpperCase();
        const variantSelects = document.querySelector('variant-selects');
        const currentValues = Array.from(variantSelects.querySelectorAll('select option[selected], fieldset input:checked')).map(el => el.value);

        const optionValue = "custom";
        const optionNumber = 2;
        const required = false;
        const selector = ".shoulder-" + optionValue + optionNumber;
        const selectorInput = selector + " input";
        const compareValue = currentValues[optionNumber - 1];
        const finalValue = sanitizeSelectorName(compareValue);

        for(const product of custom_products.slice(0, -1))
          {
            console.log(finalValue);
            console.log(product[finalValue]);
            if(product.body_measurement === 'Shoulder')
            {
                document.getElementById("shoulder").value = product[finalValue];
            }
            else if(product.body_measurement === 'Waist')
            {
                document.getElementById("wrist").value = product[finalValue];
            }
            else if(product.body_measurement === 'Hip')
            {
                document.getElementById("hips").value = product[finalValue];
            }
            else if(product.body_measurement === 'Chest')
            {
                document.getElementById("chest").value =  product[finalValue];
            }

          }
        }

       const handleurl = (csvText)=>{
                     const rows = csvText.split("\n");
              const headers = rows[0].split(",");
              const json = rows.slice(1).map(row => {
                  const values = row.split(",");
                  const obj = {};
                  headers.slice(1).forEach((header, index) => {
                      obj[header] = values[index + 1];
                  });
                  return {
                      body_measurement: values[0],
                      ...obj
                  };
              });

              return json;
          }

        const fetch_url = ()=>{
          const csvUrl = "https://cdn.shopify.com/s/files/1/0902/3514/2463/files/product_size_data_duplicate.csv?v=1726481736";
          var products;
          fetch(csvUrl)
              .then(response => response.text()).then((csvText) => {
                  console.log("CSV Data:", csvText);
                   products =   handleurl(csvText);
                  console.log("product data:", products);
                    checkCurrentOption(products);
              }).catch(error => {
                  console.error("Error fetching or parsing CSV:", error);
              })


        }

      fetch_url();
      document.querySelector(".product-variant-id").addEventListener('change',fetch_url);
    });
</script>
